OLD LIST FORMAT = not valid json

var Y1977=[
Jan=[
{"Day":"Sat","DayN":1,"SRT":"6:42:07","SU":"10CP28","MO":"20TA16","ME":"21CP55","VE":"26AQ01","MA":"29SG59","JU":"21TA32","SA":"15LE50","UR":"10SC53","NE":"14SG39","PL":"14LI07","NO":"29LI53"},

Make year and moths into objects that contain arrays of day's info

NEW LIST FORMAT = valid json

{"YEARS":[
{"YEAR_XXXX":[
{"MONTH_XX":[
{"day_X":"X", "dayN":"x", "etcKey":"etcValue"},
{"day_X":"X", "dayN":"x", "etcKey":"etcValue"}
]},
{"MONTH_YY":[
{"day_X":"X", "dayN":"x", "etcKey":"etcValue"},
{"day_X":"X", "dayN":"x", "etcKey":"etcValue"}
]},
{"MONTH_ZZ":[
{"day_X":"X", "dayN":"x", "etcKey":"etcValue"},
{"day_X":"X", "dayN":"x", "etcKey":"etcValue"}
]}]}]}

THINK ABOUT HOW CALLING INFO WOULD WORK IN THIS STRUCTURE.

OBJECT AS YEARS (PLURAL) 
1 > CALL ONE YEAR 
2 > CALL ONE MONTH 
3 > CALL ONE DAY 
4 > RETURN THAT DAY INFO

WORK TO DO...

1 REFORMAT "years.json" FILE WITH PYTHON OR MANUALLY...(PYTHON)
1950 - 2020 
1.1 PULL DATA FROM JPL'S HORIZON API AND COMPARE WITH FILE
2 REEVALUATE "monthprocess.js" FILE FOR CLEANER PERFORMANCE
"Object1.html" FILE WORKS BUT IS MANUAL. NEEDS TO BE CONNECTED TO INPUTS TO ALLOW FUNCTIONAL RESPONSE.
2.1 REEVALUATE "ALGORITH LOGIC.txt" AND ALL JS LOGIC
3 REEVALUATE "object1.html" FILE TO CREATE CLEANER CODE.
4 GET LAT/LONG DATA WITH TIMEZONES AND FORMAT